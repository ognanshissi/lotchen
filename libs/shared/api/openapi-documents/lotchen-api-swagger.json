{
  "openapi": "3.0.0",
  "paths": {
    "/api/v1/caller/token": {
      "post": {
        "operationId": "CallerController_token_v1",
        "parameters": [],
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TwilioAccessTokenResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Caller"
        ]
      }
    },
    "/api/v1/users": {
      "post": {
        "operationId": "UsersController_createUser_v1",
        "parameters": [
          {
            "name": "x-tenant-fqdn",
            "in": "header",
            "description": "The Tenant Fqdn",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserCommand"
              }
            }
          }
        },
        "responses": {
          "2XX": {
            "description": ""
          }
        },
        "tags": [
          "Users"
        ]
      },
      "get": {
        "operationId": "UsersController_allUsers_v1",
        "parameters": [
          {
            "name": "x-tenant-fqdn",
            "in": "header",
            "description": "The Tenant Fqdn",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "required": false,
            "in": "query",
            "description": "Fields to return",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "email",
            "required": false,
            "in": "query",
            "description": "Filter by email",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fullName",
            "required": false,
            "in": "query",
            "description": "Filter by fullName, FirstName or LastName",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "isDeleted",
            "required": false,
            "in": "query",
            "description": "Filter by deleted records",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FindAllUserQueryResponse"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Users"
        ]
      }
    },
    "/api/v1/users/{id}": {
      "get": {
        "operationId": "UsersController_findUserById_v1",
        "parameters": [
          {
            "name": "x-tenant-fqdn",
            "in": "header",
            "description": "The Tenant Fqdn",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FindUserByIdQueryResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Users"
        ]
      },
      "delete": {
        "operationId": "UsersController_deleteUser_v1",
        "parameters": [
          {
            "name": "x-tenant-fqdn",
            "in": "header",
            "description": "The Tenant Fqdn",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "Users"
        ]
      }
    },
    "/api/v1/users/{id}/assign-permissions": {
      "put": {
        "operationId": "UsersController_assignPermissionsToUser_v1",
        "parameters": [
          {
            "name": "x-tenant-fqdn",
            "in": "header",
            "description": "The Tenant Fqdn",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AssignPermissionsCommandRequest"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "Users"
        ]
      }
    },
    "/api/v1/users/{id}/assign-roles": {
      "put": {
        "operationId": "UsersController_assignRolesToUser_v1",
        "parameters": [
          {
            "name": "x-tenant-fqdn",
            "in": "header",
            "description": "The Tenant Fqdn",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AssignRolesCommandRequest"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "Users"
        ]
      }
    },
    "/api/v1/users/{id}/roles": {
      "post": {
        "operationId": "UsersController_updateUserRoles_v1",
        "parameters": [
          {
            "name": "x-tenant-fqdn",
            "in": "header",
            "description": "The Tenant Fqdn",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "Users"
        ]
      }
    },
    "/api/v1/users/{id}/permissions": {
      "get": {
        "operationId": "UsersController_petUserPermissions_v1",
        "parameters": [
          {
            "name": "x-tenant-fqdn",
            "in": "header",
            "description": "The Tenant Fqdn",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Users"
        ]
      }
    },
    "/api/v1/users/search": {
      "post": {
        "operationId": "UsersController_searchUserPaginate_v1",
        "parameters": [
          {
            "name": "x-tenant-fqdn",
            "in": "header",
            "description": "The Tenant Fqdn",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PaginateAllUsersCommand"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "title": "PaginationResponseOfPaginateAllUsersCommandDto",
                      "$ref": "#/components/schemas/Pagination"
                    },
                    {
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/PaginateAllUsersCommandDto"
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Users"
        ]
      }
    },
    "/api/v1/users/invite-user": {
      "post": {
        "operationId": "UsersController_inviteUser_v1",
        "parameters": [
          {
            "name": "x-tenant-fqdn",
            "in": "header",
            "description": "The Tenant Fqdn",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InviteUserCommand"
              }
            }
          }
        },
        "responses": {
          "2XX": {
            "description": ""
          }
        },
        "tags": [
          "Users"
        ]
      }
    },
    "/api/v1/auth/login": {
      "post": {
        "operationId": "AuthController_login_v1",
        "parameters": [
          {
            "name": "x-tenant-fqn",
            "in": "header",
            "description": "The Tenant Fqn",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginCommand"
              }
            }
          }
        },
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessTokenResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Auth"
        ]
      }
    },
    "/api/v1/auth/refresh-token": {
      "post": {
        "operationId": "AuthController_refreshToken_v1",
        "parameters": [
          {
            "name": "x-tenant-fqn",
            "in": "header",
            "description": "The Tenant Fqn",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RefreshTokenCommand"
              }
            }
          }
        },
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessTokenResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Auth"
        ]
      }
    },
    "/api/v1/auth/forgot-password": {
      "post": {
        "operationId": "AuthController_forgotPassword_v1",
        "parameters": [
          {
            "name": "x-tenant-fqn",
            "in": "header",
            "description": "The Tenant Fqn",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ForgotPasswordCommand"
              }
            }
          }
        },
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForgotPasswordCommandResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Auth"
        ]
      }
    },
    "/api/v1/auth/reset-password": {
      "post": {
        "operationId": "AuthController_resetPassword_v1",
        "parameters": [
          {
            "name": "x-tenant-fqn",
            "in": "header",
            "description": "The Tenant Fqn",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResetPasswordCommand"
              }
            }
          }
        },
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResetPasswordCommandResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Auth"
        ]
      }
    },
    "/api/v1/profile/me": {
      "get": {
        "operationId": "ProfileController_currentUser_v1",
        "parameters": [
          {
            "name": "x-tenant-fqn",
            "in": "header",
            "description": "The Tenant Fqn",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUserProfileQueryResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Profile"
        ]
      }
    },
    "/api/v1/permissions/generate": {
      "post": {
        "operationId": "PermissionsController_generatePermissions_v1",
        "parameters": [
          {
            "name": "x-tenant-fqdn",
            "in": "header",
            "description": "The Tenant Fqdn",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Permissions"
        ]
      }
    },
    "/api/v1/permissions": {
      "get": {
        "operationId": "PermissionsController_allPermissions_v1",
        "parameters": [
          {
            "name": "x-tenant-fqdn",
            "in": "header",
            "description": "The Tenant Fqdn",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FindAllPermissionQuery"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Permissions"
        ]
      }
    },
    "/api/v1/roles": {
      "post": {
        "operationId": "RolesController_createRole_v1",
        "parameters": [
          {
            "name": "x-tenant-fqdn",
            "in": "header",
            "description": "The Tenant Fqdn",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateRoleCommand"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Role created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateRoleCommandResponse"
                }
              }
            }
          },
          "400": {
            "description": "Role already exists"
          }
        },
        "tags": [
          "Roles"
        ]
      },
      "get": {
        "operationId": "RolesController_allRoles_v1",
        "parameters": [
          {
            "name": "x-tenant-fqdn",
            "in": "header",
            "description": "The Tenant Fqdn",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "required": false,
            "in": "query",
            "description": "Fields to return",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "required": false,
            "in": "query",
            "description": "Filter by name",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Roles found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FindRoleByIdQueryResponse"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Roles"
        ]
      }
    },
    "/api/v1/roles/{role}": {
      "put": {
        "operationId": "RolesController_updateRolePermissions_v1",
        "parameters": [
          {
            "name": "x-tenant-fqdn",
            "in": "header",
            "description": "The Tenant Fqdn",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "role",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Role permissions updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateRolePermissionsCommandResponse"
                }
              }
            }
          },
          "400": {
            "description": "Role not found"
          }
        },
        "tags": [
          "Roles"
        ]
      }
    },
    "/api/v1/roles/{id}": {
      "get": {
        "operationId": "RolesController_findRoleById_v1",
        "parameters": [
          {
            "name": "x-tenant-fqdn",
            "in": "header",
            "description": "The Tenant Fqdn",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Role found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FindRoleByIdQueryResponse"
                }
              }
            }
          },
          "404": {
            "description": "Role not found"
          }
        },
        "tags": [
          "Roles"
        ]
      }
    },
    "/api/v1/roles/generate-predefined-roles": {
      "post": {
        "operationId": "RolesController_generatePredefinedRoles_v1",
        "parameters": [
          {
            "name": "x-tenant-fqdn",
            "in": "header",
            "description": "The Tenant Fqdn",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "Roles"
        ]
      }
    },
    "/api/v1/territories": {
      "post": {
        "operationId": "TerritoriesController_createTerritory_v1",
        "parameters": [
          {
            "name": "x-tenant-fqdn",
            "in": "header",
            "description": "The Tenant Fqdn",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTerritoryCommand"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "Territories"
        ]
      },
      "get": {
        "operationId": "TerritoriesController_allTerritories_v1",
        "parameters": [
          {
            "name": "x-tenant-fqdn",
            "in": "header",
            "description": "The Tenant Fqdn",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "required": false,
            "in": "query",
            "description": "Name of the territory",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "isDeleted",
            "required": false,
            "in": "query",
            "description": "Get deleted territories or not",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          },
          {
            "name": "fields",
            "required": true,
            "in": "query",
            "description": "This is a comma separated list, define the properties the api should return",
            "schema": {
              "default": "id,name,timestamp,createdByInfo,parent,children",
              "example": "id,name,timestamp,createdByInfo,parent,children",
              "type": "string"
            }
          },
          {
            "name": "limit",
            "required": true,
            "in": "query",
            "description": "Length of records to return",
            "schema": {
              "minimum": 5,
              "maximum": 30,
              "default": 5,
              "example": 5,
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FindAllTerritoriesQueryResponse"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Territories"
        ]
      }
    },
    "/api/v1/territories/paginate": {
      "post": {
        "operationId": "TerritoriesController_paginateAllTerritories_v1",
        "parameters": [
          {
            "name": "x-tenant-fqdn",
            "in": "header",
            "description": "The Tenant Fqdn",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PaginateAllTerritoriesCommand"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "title": "PaginationResponseOfPaginateAllTerritoriesCommand",
                      "$ref": "#/components/schemas/Pagination"
                    },
                    {
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/PaginateAllTerritoriesCommand"
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Territories"
        ]
      }
    },
    "/api/v1/agencies": {
      "post": {
        "operationId": "AgenciesController_createAgency_v1",
        "parameters": [
          {
            "name": "x-tenant-fqn",
            "in": "header",
            "description": "The Tenant Fqn",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAgencyCommand"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "Agencies"
        ]
      },
      "get": {
        "operationId": "AgenciesController_findAllAgencies_v1",
        "parameters": [
          {
            "name": "x-tenant-fqn",
            "in": "header",
            "description": "The Tenant Fqn",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FindAllAgenciesQueryResponse"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Agencies"
        ]
      }
    },
    "/api/v1/agencies/{id}": {
      "get": {
        "operationId": "AgenciesController_findAgencyById_v1",
        "parameters": [
          {
            "name": "x-tenant-fqn",
            "in": "header",
            "description": "The Tenant Fqn",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Agencies"
        ]
      }
    },
    "/api/v1/teams": {
      "post": {
        "operationId": "TeamsController_createTeam_v1",
        "parameters": [
          {
            "name": "x-tenant-fqdn",
            "in": "header",
            "description": "The Tenant Fqdn",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTeamCommand"
              }
            }
          }
        },
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateTeamCommandResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Teams"
        ]
      },
      "get": {
        "operationId": "TeamsController_findAllTeams_v1",
        "parameters": [
          {
            "name": "x-tenant-fqdn",
            "in": "header",
            "description": "The Tenant Fqdn",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "required": false,
            "in": "query",
            "description": "Fields to return",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "required": false,
            "in": "query",
            "description": "Filter by name",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "isDeleted",
            "required": false,
            "in": "query",
            "description": "Filter by deleted",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FindAllTeamsQueryResponse"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Teams"
        ]
      }
    },
    "/api/v1/teams/{id}": {
      "delete": {
        "operationId": "TeamsController_deleteTeam_v1",
        "parameters": [
          {
            "name": "x-tenant-fqdn",
            "in": "header",
            "description": "The Tenant Fqdn",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "Teams"
        ]
      },
      "put": {
        "operationId": "TeamsController_updateTeam_v1",
        "parameters": [
          {
            "name": "x-tenant-fqdn",
            "in": "header",
            "description": "The Tenant Fqdn",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTeamCommandRequest"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Update team"
          }
        },
        "tags": [
          "Teams"
        ]
      }
    },
    "/api/v1/organizations": {
      "get": {
        "operationId": "OrganizationsController_findAllOrganizations_v1",
        "parameters": [
          {
            "name": "x-tenant-fqdn",
            "in": "header",
            "description": "The Tenant Fqdn",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FindAllOrganizationQueryResponse"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Organizations"
        ]
      },
      "post": {
        "operationId": "OrganizationsController_createOrganization_v1",
        "parameters": [
          {
            "name": "x-tenant-fqdn",
            "in": "header",
            "description": "The Tenant Fqdn",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrganizationCommand"
              }
            }
          }
        },
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "tags": [
          "Organizations"
        ]
      }
    },
    "/api/v1/contacts": {
      "post": {
        "operationId": "ContactsController_createContact_v1",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateContactCommand"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Contact created"
          }
        },
        "tags": [
          "Contacts"
        ]
      },
      "get": {
        "operationId": "ContactsController_findAllContacts_v1",
        "parameters": [
          {
            "name": "fields",
            "required": false,
            "in": "query",
            "description": "Fields to return",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "email",
            "required": false,
            "in": "query",
            "description": "Filter by email",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "mobileNumber",
            "required": false,
            "in": "query",
            "description": "Filter by mobile number",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "firstName",
            "required": false,
            "in": "query",
            "description": "Filter by first name",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "lastName",
            "required": false,
            "in": "query",
            "description": "Filter by last name",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Contacts found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FindAllContactsQueryResponse"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Contacts"
        ]
      }
    },
    "/api/v1/contacts/{id}": {
      "get": {
        "operationId": "ContactsController_findContactById_v1",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Contact found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FindContactByIdQueryResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Contacts"
        ]
      },
      "put": {
        "operationId": "ContactsController_updateContact_v1",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateContactCommandRequest"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Contact updated"
          }
        },
        "tags": [
          "Contacts"
        ]
      }
    },
    "/api/v1/contacts/paginate": {
      "post": {
        "operationId": "ContactsController_paginateAllTerritories_v1",
        "parameters": [
          {
            "name": "fields",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PaginateAllContactsCommandRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "title": "PaginationResponseOfPaginateAllContactsCommandDto",
                      "$ref": "#/components/schemas/Pagination"
                    },
                    {
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/PaginateAllContactsCommandDto"
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Contacts"
        ]
      }
    },
    "/api/v1/contacts/import-excel": {
      "post": {
        "operationId": "ContactsController_importContactsExcel_v1",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "Contacts"
        ]
      }
    },
    "/api/v1/contacts/call-logs": {
      "post": {
        "operationId": "ContactsController_createCallLog_v1",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCallLogCommand"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Contact created"
          }
        },
        "tags": [
          "Contacts"
        ]
      }
    },
    "/api/v1/tasks": {
      "post": {
        "operationId": "TasksController_createTask_v1",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTaskCommand"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "Tasks"
        ]
      },
      "get": {
        "operationId": "TasksController_findAllTasks_v1",
        "parameters": [
          {
            "name": "ownerId",
            "required": true,
            "in": "query",
            "description": "The user whom the task is assigned",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "relatedToId",
            "required": true,
            "in": "query",
            "description": "Entry related to entity, for example contactId",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "taskType",
            "required": true,
            "in": "query",
            "description": "Type of task",
            "schema": {
              "default": "follow up",
              "enum": [
                "follow up",
                "call reminder"
              ],
              "type": "string"
            }
          },
          {
            "name": "completed",
            "required": true,
            "in": "query",
            "description": "Completed tasks",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FindAllTasksQueryResponse"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Tasks"
        ]
      }
    },
    "/api/v1/tasks/{id}/complete-task": {
      "patch": {
        "operationId": "TasksController_completeTask_v1",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "Tasks"
        ]
      }
    },
    "/api/v1/tasks/{id}": {
      "delete": {
        "operationId": "TasksController_deleteTask_v1",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "Tasks"
        ]
      }
    },
    "/api/v1/notes": {
      "post": {
        "operationId": "NotesController_createNote_v1",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateNoteCommand"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "Notes"
        ]
      },
      "get": {
        "operationId": "NotesController_findAllNotes_v1",
        "parameters": [
          {
            "name": "ownerId",
            "required": true,
            "in": "query",
            "description": "The user whom the task is assigned",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "relatedToId",
            "required": true,
            "in": "query",
            "description": "Entry related to entity, for example contactId",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "deleted",
            "required": true,
            "in": "query",
            "description": "Deleted notes",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FindAllNotesQueryResponse"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Notes"
        ]
      }
    },
    "/api/v1/notes/{id}": {
      "delete": {
        "operationId": "NotesController_deleteNote_v1",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "Notes"
        ]
      }
    },
    "/api/v1/meetings": {
      "post": {
        "operationId": "MeetingsController_createMeeting_v1",
        "parameters": [],
        "responses": {
          "201": {
            "description": "Create a new meeting",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateMeetingCommand"
                }
              }
            }
          }
        },
        "tags": [
          "Meetings"
        ]
      }
    }
  },
  "info": {
    "title": "Talisoft.Lotchen.API",
    "description": "The Lotchen API description",
    "version": "1.0",
    "contact": {}
  },
  "tags": [
    {
      "name": "Lotchen-api",
      "description": ""
    }
  ],
  "servers": [],
  "components": {
    "schemas": {
      "TwilioAccessTokenResponse": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "description": "Toke"
          },
          "identity": {
            "type": "string",
            "description": "The connected Agent name"
          }
        },
        "required": [
          "token",
          "identity"
        ]
      },
      "CreateUserCommand": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "Email"
          },
          "password": {
            "type": "string",
            "description": "Password"
          },
          "confirmPassword": {
            "type": "string",
            "description": "Confirm password"
          },
          "firstName": {
            "type": "string",
            "description": "firstName"
          },
          "lastName": {
            "type": "string",
            "description": "LastName"
          },
          "mobileNumber": {
            "type": "string",
            "description": "Mobile number"
          },
          "dateOfBirth": {
            "format": "date-time",
            "type": "string",
            "description": "Date of birth"
          }
        },
        "required": [
          "email",
          "password",
          "confirmPassword",
          "firstName",
          "lastName",
          "mobileNumber"
        ]
      },
      "AuditUserInfoDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "User Id"
          },
          "email": {
            "type": "string",
            "description": "Email"
          },
          "firstName": {
            "type": "string",
            "description": "FirstName"
          },
          "lastName": {
            "type": "string",
            "description": "LastName"
          }
        },
        "required": [
          "id"
        ]
      },
      "FindAllUserQueryResponse": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "string",
            "description": "User id, use `id` for dynamic field querying"
          },
          "email": {
            "type": "string",
            "description": "User email, use `contactInfo` for dynamic field querying if you want email in response"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          },
          "createdByInfo": {
            "description": "Information of the owner of the record",
            "allOf": [
              {
                "$ref": "#/components/schemas/AuditUserInfoDto"
              }
            ]
          }
        },
        "required": [
          "userId",
          "email",
          "firstName",
          "lastName",
          "createdAt",
          "updatedAt",
          "createdByInfo"
        ]
      },
      "FindUserByIdQueryRoleDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Role Id"
          },
          "name": {
            "type": "string",
            "description": "Role Name"
          }
        },
        "required": [
          "id",
          "name"
        ]
      },
      "FindUserByIdQueryResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "User Id"
          },
          "email": {
            "type": "string",
            "description": "User Email"
          },
          "isVerified": {
            "type": "boolean",
            "description": "Is user verified"
          },
          "isLocked": {
            "type": "boolean",
            "description": "Is user locked"
          },
          "isSuperAdmin": {
            "type": "boolean",
            "description": "Is user super admin"
          },
          "permissions": {
            "description": "User permissions",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "roles": {
            "description": "User roles",
            "allOf": [
              {
                "$ref": "#/components/schemas/FindUserByIdQueryRoleDto"
              }
            ]
          }
        },
        "required": [
          "id",
          "email",
          "isVerified",
          "isLocked",
          "isSuperAdmin",
          "permissions",
          "roles"
        ]
      },
      "AssignPermissionsCommandRequest": {
        "type": "object",
        "properties": {
          "permissions": {
            "description": "List of permissions keys",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "permissions"
        ]
      },
      "AssignRolesCommandRequest": {
        "type": "object",
        "properties": {
          "roles": {
            "description": "List of role Ids",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "roles"
        ]
      },
      "Pagination": {
        "type": "object",
        "properties": {
          "totalElements": {
            "type": "number",
            "description": ""
          },
          "pageIndex": {
            "type": "number"
          },
          "pageSize": {
            "type": "number"
          },
          "totalPages": {
            "type": "number"
          },
          "data": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "totalElements",
          "pageIndex",
          "pageSize",
          "totalPages",
          "data"
        ]
      },
      "PaginateAllUsersTeamDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "name"
        ]
      },
      "PaginateAllUsersCommandDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "isVerified": {
            "type": "boolean"
          },
          "isActive": {
            "type": "boolean"
          },
          "roles": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "permissions": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "teams": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PaginateAllUsersTeamDto"
            }
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          }
        },
        "required": [
          "id",
          "email",
          "isVerified",
          "isActive",
          "roles",
          "permissions",
          "teams",
          "createdAt",
          "updatedAt"
        ]
      },
      "PaginateAllUsersCommand": {
        "type": "object",
        "properties": {
          "sort": {
            "type": "object"
          },
          "pageIndex": {
            "type": "number",
            "description": "Page Index",
            "example": 0,
            "minimum": 0
          },
          "pageSize": {
            "type": "number",
            "maximum": 30,
            "minimum": 5,
            "example": 5
          }
        },
        "required": [
          "pageIndex",
          "pageSize"
        ]
      },
      "InviteUserCommand": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "User email"
          },
          "firstName": {
            "type": "string",
            "description": "FirstName"
          },
          "lastName": {
            "type": "string",
            "description": "LastName"
          },
          "jobTitle": {
            "type": "string",
            "description": "Job title"
          },
          "workNumber": {
            "type": "string",
            "description": "Work number"
          },
          "mobileNumber": {
            "type": "string",
            "description": "Mobile number"
          },
          "reportTo": {
            "type": "string",
            "description": "The user will report to this person, aka the user manager"
          },
          "dateOfBirth": {
            "type": "string",
            "description": "User date of birth"
          },
          "role": {
            "type": "string",
            "description": "The user role id"
          },
          "teams": {
            "type": "string",
            "description": "List of teams ids the user belongs to"
          }
        },
        "required": [
          "email",
          "firstName",
          "lastName",
          "jobTitle"
        ]
      },
      "LoginCommand": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        },
        "required": [
          "email",
          "password"
        ]
      },
      "AccessTokenResponse": {
        "type": "object",
        "properties": {
          "accessToken": {
            "type": "string"
          },
          "expiresIn": {
            "type": "number"
          },
          "refreshToken": {
            "type": "string"
          },
          "tokenType": {
            "type": "string"
          }
        },
        "required": [
          "accessToken",
          "expiresIn",
          "refreshToken",
          "tokenType"
        ]
      },
      "RefreshTokenCommand": {
        "type": "object",
        "properties": {
          "refreshToken": {
            "type": "string"
          }
        },
        "required": [
          "refreshToken"
        ]
      },
      "ForgotPasswordCommand": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "redirectPath": {
            "type": "string",
            "description": "Url where the user will be redirected after clicking on the link inside the mail"
          }
        },
        "required": [
          "email",
          "redirectPath"
        ]
      },
      "ForgotPasswordCommandResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "url": {
            "type": "object"
          }
        },
        "required": [
          "message",
          "url"
        ]
      },
      "ResetPasswordCommand": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "description": "token passed in the url"
          },
          "oldPassword": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "confirmPassword": {
            "type": "string"
          }
        },
        "required": [
          "token",
          "oldPassword",
          "password",
          "confirmPassword"
        ]
      },
      "ResetPasswordCommandResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Message to describe the completed action"
          }
        },
        "required": [
          "message"
        ]
      },
      "ContactInfoDto": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          }
        },
        "required": [
          "email"
        ]
      },
      "GetUserProfileQueryResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "dateOfBirth": {
            "format": "date-time",
            "type": "string"
          },
          "defaultLanguage": {
            "type": "string"
          },
          "contactInfo": {
            "$ref": "#/components/schemas/ContactInfoDto"
          }
        },
        "required": [
          "id",
          "userId",
          "firstName",
          "lastName",
          "dateOfBirth",
          "defaultLanguage",
          "contactInfo"
        ]
      },
      "FindAllPermissionQuery": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          }
        },
        "required": [
          "code"
        ]
      },
      "CreateRoleCommand": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the role"
          },
          "permissions": {
            "description": "Permissions of the role",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "name",
          "permissions"
        ]
      },
      "CreateRoleCommandResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Id of the role"
          }
        },
        "required": [
          "id"
        ]
      },
      "UpdateRolePermissionsCommandResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Id of the role"
          },
          "name": {
            "type": "string",
            "description": "Name of the role"
          },
          "permissions": {
            "description": "Permissions of the role",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "id",
          "name",
          "permissions"
        ]
      },
      "FindRoleByIdQueryResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Id of the role"
          },
          "name": {
            "type": "string",
            "description": "Name of the role"
          },
          "permissions": {
            "description": "Permissions of the role",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "id",
          "name",
          "permissions"
        ]
      },
      "CreateTerritoryCommand": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the territory",
            "example": "Ivory Coast"
          },
          "description": {
            "type": "string"
          },
          "childrenIds": {
            "description": "Territory children",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "parentId": {
            "type": "string"
          }
        },
        "required": [
          "name",
          "description"
        ]
      },
      "TerritoryLiteDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Id of the territory"
          },
          "name": {
            "type": "string",
            "description": "Name of the territory"
          }
        },
        "required": [
          "id",
          "name"
        ]
      },
      "TerritoriesQueryUserDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "User Id"
          },
          "email": {
            "type": "string",
            "description": "Email"
          },
          "fullName": {
            "type": "string",
            "description": "User Full name, FirstName and LastName combined"
          }
        },
        "required": [
          "id",
          "email",
          "fullName"
        ]
      },
      "FindAllTerritoriesQueryResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string",
            "description": "Name of the territory"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string",
            "description": "Date of creation"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string",
            "description": "Latest updated At"
          },
          "createdByInfo": {
            "description": "Person who created the entry",
            "allOf": [
              {
                "$ref": "#/components/schemas/TerritoriesQueryUserDto"
              }
            ]
          },
          "parentInfo": {
            "description": "Name of the territory parent if so",
            "allOf": [
              {
                "$ref": "#/components/schemas/TerritoryLiteDto"
              }
            ]
          },
          "children": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TerritoryLiteDto"
            }
          }
        },
        "required": [
          "id",
          "name",
          "createdAt",
          "updatedAt"
        ]
      },
      "FilterDto": {
        "type": "object",
        "properties": {
          "operator": {
            "type": "string",
            "default": "eq",
            "enum": [
              "eq",
              "lt",
              "gte",
              "lte",
              "gt",
              "in",
              "nin",
              "ne",
              "contain"
            ]
          },
          "value": {
            "type": "string",
            "description": "Value"
          }
        },
        "required": [
          "operator",
          "value"
        ]
      },
      "FilterAllTerritoriesCommand": {
        "type": "object",
        "properties": {
          "name": {
            "$ref": "#/components/schemas/FilterDto"
          }
        },
        "required": [
          "name"
        ]
      },
      "PaginateAllTerritoriesCommand": {
        "type": "object",
        "properties": {
          "sort": {
            "type": "object"
          },
          "pageIndex": {
            "type": "number",
            "description": "Page Index",
            "example": 0,
            "minimum": 0
          },
          "pageSize": {
            "type": "number",
            "maximum": 30,
            "minimum": 5,
            "example": 5
          },
          "filters": {
            "description": "",
            "allOf": [
              {
                "$ref": "#/components/schemas/FilterAllTerritoriesCommand"
              }
            ]
          }
        },
        "required": [
          "pageIndex",
          "pageSize",
          "filters"
        ]
      },
      "CreateAgencyAddressDto": {
        "type": "object",
        "properties": {
          "street": {
            "type": "string",
            "description": "Street",
            "example": "Avenue Fadiga"
          },
          "city": {
            "type": "string",
            "description": "City",
            "example": "Abidjan"
          },
          "coordinates": {
            "description": "Coordinates of the place (Office), probably a known country such as Ivory Coast",
            "example": "[7.5455112, -5.547545]",
            "type": "array",
            "items": {
              "type": "number"
            }
          },
          "postalCode": {
            "type": "string"
          }
        },
        "required": [
          "street",
          "city"
        ]
      },
      "CreateAgencyCommand": {
        "type": "object",
        "properties": {
          "territoryId": {
            "type": "string",
            "description": "Territory ID, the territory where the office will be linked"
          },
          "name": {
            "type": "string",
            "description": "Agency name",
            "example": "Agence de Plateau"
          },
          "address": {
            "$ref": "#/components/schemas/CreateAgencyAddressDto"
          }
        },
        "required": [
          "territoryId",
          "name",
          "address"
        ]
      },
      "FindAllAgenciesAddressDto": {
        "type": "object",
        "properties": {
          "street": {
            "type": "string",
            "description": "Street",
            "example": "Avenue Fadiga"
          },
          "city": {
            "type": "string",
            "description": "City",
            "example": "Abidjan"
          },
          "coordinates": {
            "description": "Coordinates of the place (Office)",
            "example": "[7.5455112, -5.547545]",
            "type": "array",
            "items": {
              "type": "number"
            }
          },
          "postalCode": {
            "type": "string"
          }
        },
        "required": [
          "street",
          "city"
        ]
      },
      "FindAllAgenciesQueryResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "territoryId": {
            "type": "string"
          },
          "address": {
            "$ref": "#/components/schemas/FindAllAgenciesAddressDto"
          }
        },
        "required": [
          "id",
          "name",
          "territoryId",
          "address"
        ]
      },
      "CreateTeamCommand": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the team"
          },
          "description": {
            "type": "string",
            "description": "Team description"
          },
          "territoryId": {
            "type": "string",
            "description": "The territory on  which the team is linked"
          },
          "managerId": {
            "type": "string"
          },
          "memberIds": {
            "description": "User Ids to link into the team",
            "default": [],
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "name"
        ]
      },
      "CreateTeamCommandResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          }
        },
        "required": [
          "id"
        ]
      },
      "FindAllTeamsQueryUserDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "User Id"
          },
          "email": {
            "type": "string",
            "description": "User email"
          },
          "firstName": {
            "type": "string",
            "description": "FirstName"
          },
          "lastName": {
            "type": "string",
            "description": "LastName"
          }
        }
      },
      "FindAllTeamsQueryResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Team Id"
          },
          "name": {
            "type": "string",
            "description": "Team name"
          },
          "description": {
            "type": "string",
            "description": "Team description"
          },
          "managerInfo": {
            "$ref": "#/components/schemas/FindAllTeamsQueryUserDto"
          },
          "members": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FindAllTeamsQueryUserDto"
            }
          },
          "createdAt": {
            "format": "date-time",
            "type": "string",
            "description": "Date of creation"
          },
          "createdByInfo": {
            "description": "Created by user information",
            "allOf": [
              {
                "$ref": "#/components/schemas/AuditUserInfoDto"
              }
            ]
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string",
            "description": "Date of last update"
          }
        },
        "required": [
          "id",
          "name",
          "createdAt",
          "createdByInfo",
          "updatedAt"
        ]
      },
      "UpdateTeamCommandRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Team new name"
          },
          "description": {
            "type": "string",
            "description": "Team description"
          },
          "territoryId": {
            "type": "string",
            "description": "Territory Id"
          },
          "managerId": {
            "type": "string",
            "description": "Manager Id"
          }
        }
      },
      "FindAllOrganizationQueryResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          }
        },
        "required": [
          "id",
          "name",
          "description",
          "createdAt",
          "updatedAt"
        ]
      },
      "CreateOrganizationCommand": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the organization (Subsidiary)"
          },
          "description": {
            "type": "string",
            "description": "Description of the organization, scope and country where is located"
          }
        },
        "required": [
          "name",
          "description"
        ]
      },
      "CreateContactCommand": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "Email"
          },
          "firstName": {
            "type": "string",
            "description": "firstName"
          },
          "lastName": {
            "type": "string",
            "description": "LastName"
          },
          "mobileNumber": {
            "type": "string",
            "description": "Mobile number"
          },
          "dateOfBirth": {
            "format": "date-time",
            "type": "string",
            "description": "Date of birth"
          },
          "jobTitle": {
            "type": "string",
            "description": "Job title"
          }
        },
        "required": [
          "email",
          "firstName",
          "lastName",
          "mobileNumber"
        ]
      },
      "FindAllContactsQueryResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Id"
          },
          "email": {
            "type": "string",
            "description": "Email"
          },
          "firstName": {
            "type": "string",
            "description": "First name"
          },
          "lastName": {
            "type": "string",
            "description": "Last name"
          },
          "mobileNumber": {
            "type": "string",
            "description": "Mobile number"
          },
          "source": {
            "type": "string",
            "description": "Source of the lead"
          },
          "dateOfBirth": {
            "format": "date-time",
            "type": "string",
            "description": "Date of birth"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string",
            "description": "Date of creation"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string",
            "description": "Date of update"
          }
        },
        "required": [
          "id"
        ]
      },
      "FindContactByIdQueryResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Id"
          },
          "email": {
            "type": "string",
            "description": "Email"
          },
          "firstName": {
            "type": "string",
            "description": "First name"
          },
          "lastName": {
            "type": "string",
            "description": "Last name"
          },
          "mobileNumber": {
            "type": "string",
            "description": "Mobile number"
          },
          "dateOfBirth": {
            "format": "date-time",
            "type": "string",
            "description": "Date of birth"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string",
            "description": "Date of creation"
          },
          "addresses": {
            "type": "array",
            "description": "Address",
            "items": {
              "$ref": "#/components/schemas/AddressDto"
            }
          },
          "jobTitle": {
            "type": "string",
            "description": "Job title"
          },
          "source": {
            "type": "string",
            "description": "Contact source"
          }
        },
        "required": [
          "id",
          "jobTitle",
          "source"
        ]
      },
      "LocationDto": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "Type",
            "default": "Point"
          },
          "coordinates": {
            "description": "Coordinates [longitude, latitude]",
            "example": "[7.5455112, -5.547545]",
            "type": "array",
            "items": {
              "type": "number"
            }
          }
        }
      },
      "AddressDto": {
        "type": "object",
        "properties": {
          "street": {
            "type": "string",
            "description": "Street"
          },
          "city": {
            "type": "string",
            "description": "City"
          },
          "state": {
            "type": "string",
            "description": "State"
          },
          "postalCode": {
            "type": "string",
            "description": "Zip code"
          },
          "country": {
            "type": "string",
            "description": "Country"
          },
          "isDefaultAddress": {
            "type": "boolean",
            "description": "Is default address"
          },
          "location": {
            "description": "Location",
            "allOf": [
              {
                "$ref": "#/components/schemas/LocationDto"
              }
            ]
          }
        }
      },
      "UpdateContactCommandRequest": {
        "type": "object",
        "properties": {
          "firstName": {
            "type": "string",
            "description": "Contact firstName"
          },
          "lastName": {
            "type": "string",
            "description": "Contact lastName"
          },
          "email": {
            "type": "string",
            "description": "Contact Email"
          },
          "mobileNumber": {
            "type": "string",
            "description": "Contact mobileNumber"
          },
          "jobTitle": {
            "type": "string",
            "description": "Contact job title"
          },
          "address": {
            "description": "Contact Address",
            "allOf": [
              {
                "$ref": "#/components/schemas/AddressDto"
              }
            ]
          }
        }
      },
      "PaginateAllContactsCommandDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Contact Id"
          },
          "email": {
            "type": "string",
            "description": "Contact email"
          },
          "firstName": {
            "type": "string",
            "description": "Contact firstName"
          },
          "lastName": {
            "type": "string",
            "description": "Contact lastName"
          },
          "mobileNumber": {
            "type": "string",
            "description": "Contact mobile number"
          },
          "createdByInfo": {
            "description": "User information who created the record",
            "allOf": [
              {
                "$ref": "#/components/schemas/AuditUserInfoDto"
              }
            ]
          },
          "createdAt": {
            "format": "date-time",
            "type": "string",
            "description": "Date of creation"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string",
            "description": "Date of update"
          },
          "score": {
            "type": "number",
            "description": "Record score",
            "default": 0
          }
        },
        "required": [
          "email",
          "firstName",
          "lastName",
          "mobileNumber",
          "createdByInfo",
          "createdAt",
          "updatedAt",
          "score"
        ]
      },
      "FilterAllContactsCommand": {
        "type": "object",
        "properties": {
          "fullName": {
            "description": "Filter by fullName",
            "allOf": [
              {
                "$ref": "#/components/schemas/FilterDto"
              }
            ]
          },
          "email": {
            "description": "Filter by email",
            "allOf": [
              {
                "$ref": "#/components/schemas/FilterDto"
              }
            ]
          },
          "mobileNumber": {
            "description": "Filter by mobileNumber",
            "allOf": [
              {
                "$ref": "#/components/schemas/FilterDto"
              }
            ]
          }
        },
        "required": [
          "fullName",
          "email",
          "mobileNumber"
        ]
      },
      "PaginateAllContactsCommandRequest": {
        "type": "object",
        "properties": {
          "sort": {
            "type": "object"
          },
          "pageIndex": {
            "type": "number",
            "description": "Page Index",
            "example": 0,
            "minimum": 0
          },
          "pageSize": {
            "type": "number",
            "maximum": 30,
            "minimum": 5,
            "example": 5
          },
          "filters": {
            "description": "Filters for the query",
            "allOf": [
              {
                "$ref": "#/components/schemas/FilterAllContactsCommand"
              }
            ]
          },
          "fullTextSearch": {
            "type": "string",
            "description": "Full-Text search on following fields: firstName, lastname, email, mobileNumber"
          }
        },
        "required": [
          "pageIndex",
          "pageSize",
          "filters",
          "fullTextSearch"
        ]
      },
      "CreateCallLogCommand": {
        "type": "object",
        "properties": {
          "toId": {
            "type": "string",
            "description": "Entity Id, ContactId / ClientId"
          },
          "toContact": {
            "type": "string",
            "description": "Contact number"
          },
          "callSid": {
            "type": "string",
            "description": "Twilio Call SID"
          },
          "entityType": {
            "type": "string",
            "description": "Entity type",
            "example": "Contact, Client",
            "enum": [
              "Contact",
              "Client"
            ],
            "default": "Contact"
          },
          "duration": {
            "type": "number",
            "description": "Call duration in seconds"
          },
          "startDate": {
            "format": "date-time",
            "type": "string",
            "description": "Call started date"
          },
          "endDate": {
            "format": "date-time",
            "type": "string",
            "description": "Call ended dated"
          },
          "status": {
            "type": "string",
            "description": "Call Status"
          }
        },
        "required": [
          "toId",
          "toContact",
          "callSid",
          "entityType",
          "duration",
          "startDate",
          "endDate",
          "status"
        ]
      },
      "CreateTaskCommand": {
        "type": "object",
        "properties": {
          "ownerId": {
            "type": "string",
            "description": "The user whom the task is assigned"
          },
          "relatedToId": {
            "type": "string",
            "description": "Entry related to entity"
          },
          "relatedToType": {
            "type": "string",
            "description": "Depending entry type"
          },
          "taskType": {
            "type": "string",
            "enum": [
              "follow up",
              "call reminder"
            ],
            "default": "follow up"
          },
          "title": {
            "type": "string",
            "description": "Task title"
          },
          "description": {
            "type": "string",
            "description": "Task description"
          },
          "dueDate": {
            "format": "date-time",
            "type": "string",
            "description": "Due Date"
          },
          "dueDatetime": {
            "type": "string",
            "description": "Due Date"
          },
          "markedAsCompleted": {
            "type": "boolean",
            "description": "Mark task as completed"
          },
          "collaboratorIds": {
            "description": "Associate collaborator",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "ownerId",
          "relatedToId",
          "relatedToType",
          "taskType",
          "title",
          "description",
          "dueDate",
          "dueDatetime",
          "markedAsCompleted",
          "collaboratorIds"
        ]
      },
      "FindAllTasksQueryResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Task ID"
          },
          "ownerId": {
            "type": "string",
            "description": "tasks onwer id"
          },
          "taskType": {
            "type": "string",
            "description": "Task type"
          },
          "title": {
            "type": "string",
            "description": "Task title"
          },
          "description": {
            "type": "string",
            "description": "Task description"
          },
          "dueDate": {
            "format": "date-time",
            "type": "string",
            "description": "Due Date"
          },
          "dueDatetime": {
            "type": "string",
            "description": "Due Date time"
          },
          "markedAsCompletedAt": {
            "format": "date-time",
            "type": "string",
            "description": "Marked task as completed"
          }
        },
        "required": [
          "id",
          "ownerId",
          "taskType",
          "title",
          "description",
          "dueDate",
          "dueDatetime",
          "markedAsCompletedAt"
        ]
      },
      "CreateNoteCommand": {
        "type": "object",
        "properties": {
          "relatedToId": {
            "type": "string",
            "description": "RelatedToId, ContactId, ClientId, DealId"
          },
          "ownerId": {
            "type": "string",
            "description": "Note owner Id"
          },
          "content": {
            "type": "string",
            "description": "Note content"
          }
        },
        "required": [
          "relatedToId",
          "ownerId",
          "content"
        ]
      },
      "FindAllNotesQueryResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Task ID"
          },
          "ownerId": {
            "type": "string",
            "description": "tasks onwer id"
          },
          "relatedToId": {
            "type": "string",
            "description": "Related to entity ID"
          },
          "content": {
            "type": "string",
            "description": "Note content"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string",
            "description": "Created date"
          },
          "deletedAt": {
            "format": "date-time",
            "type": "string",
            "description": "Deleted date"
          }
        },
        "required": [
          "id",
          "ownerId",
          "relatedToId",
          "content",
          "createdAt",
          "deletedAt"
        ]
      },
      "CreateMeetingCommand": {
        "type": "object",
        "properties": {
          "ownerId": {
            "type": "string",
            "description": "Meeting owner id"
          },
          "relatedToId": {
            "type": "string",
            "description": "Entity id on which the meeting is related"
          },
          "title": {
            "type": "string",
            "description": "Meeting title"
          },
          "startAtDate": {
            "format": "date-time",
            "type": "string",
            "description": "Meeting starting date ",
            "example": "2024-10-01"
          },
          "startAtTime": {
            "type": "string",
            "description": "Meeting starting time",
            "example": "10:00"
          },
          "endAtDate": {
            "format": "date-time",
            "type": "string",
            "description": "Meeting end date ",
            "example": "2024-10-02"
          },
          "endAtTime": {
            "type": "string",
            "description": "Meeting end time",
            "example": "11:00"
          },
          "allDay": {
            "type": "boolean",
            "description": "Meeting is for the all day, 8h - 17h"
          },
          "location": {
            "type": "string",
            "description": "Meeting location"
          },
          "description": {
            "type": "string",
            "description": "Meeting description"
          },
          "attendees": {
            "description": "List of meeting attendees",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "meetingTimeZone": {
            "type": "string",
            "description": "Meeting timezone",
            "example": "Africa/Abidjan +00:00 GMT",
            "default": "Europe/London +00:00 GMT"
          }
        },
        "required": [
          "ownerId",
          "relatedToId",
          "title",
          "startAtDate",
          "startAtTime",
          "endAtDate",
          "endAtTime",
          "allDay",
          "location",
          "description",
          "attendees",
          "meetingTimeZone"
        ]
      }
    }
  }
}